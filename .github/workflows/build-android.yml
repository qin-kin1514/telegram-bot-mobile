name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60  # Set timeout to prevent hanging builds
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y git zip unzip openjdk-8-jdk python3-pip autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo6 cmake libffi-dev libssl-dev
        sudo apt install -y build-essential libssl-dev libffi-dev python3-dev
        # Install additional dependencies for Android build
        sudo apt install -y ccache ant gradle
    
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        cmdline-tools-version: 11076708
        accept-android-sdk-licenses: true
        packages: "cmdline-tools;latest platform-tools platforms;android-31 build-tools;31.0.0 ndk;25.2.9519653 cmake;3.18.1"
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython
        # Install minimal dependencies for initial build testing
        pip install kivy kivymd requests
    
    - name: Set Android environment variables
      run: |
        echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
        echo "ANDROID_NDK=$ANDROID_HOME/ndk/25.2.9519653" >> $GITHUB_ENV
        echo "ANDROID_NDK_HOME=$ANDROID_HOME/ndk/25.2.9519653" >> $GITHUB_ENV
        echo "ANDROID_NDK_ROOT=$ANDROID_HOME/ndk/25.2.9519653" >> $GITHUB_ENV
        echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
        # Check which cmdline-tools directory exists and add to PATH
        if [ -d "$ANDROID_HOME/cmdline-tools/latest/bin" ]; then
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
        elif [ -d "$ANDROID_HOME/cmdline-tools/latest-2/bin" ]; then
          echo "$ANDROID_HOME/cmdline-tools/latest-2/bin" >> $GITHUB_PATH
        fi
        echo "$ANDROID_HOME/ndk/25.2.9519653" >> $GITHUB_PATH
    
    - name: Create sdkmanager symlink for buildozer compatibility
      run: |
        # Create tools/bin directory structure for backward compatibility
        sudo mkdir -p $ANDROID_HOME/tools/bin
        # Find the actual cmdline-tools directory and create symlink
        if [ -f "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" ]; then
          sudo ln -sf $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager $ANDROID_HOME/tools/bin/sdkmanager
          echo "Created symlink from latest directory"
        elif [ -f "$ANDROID_HOME/cmdline-tools/latest-2/bin/sdkmanager" ]; then
          sudo ln -sf $ANDROID_HOME/cmdline-tools/latest-2/bin/sdkmanager $ANDROID_HOME/tools/bin/sdkmanager
          echo "Created symlink from latest-2 directory"
        else
          echo "Error: sdkmanager not found in expected locations"
          exit 1
        fi
        # Verify the symlink works
        ls -la $ANDROID_HOME/tools/bin/sdkmanager
        $ANDROID_HOME/tools/bin/sdkmanager --version
    
    - name: Verify Android SDK and NDK installation
      run: |
        echo "Android SDK location: $ANDROID_HOME"
        echo "Android NDK location: $ANDROID_NDK_HOME"
        ls -la $ANDROID_HOME/
        echo "Checking platform-tools:"
        ls -la $ANDROID_HOME/platform-tools/
        echo "Checking cmdline-tools:"
        ls -la $ANDROID_HOME/cmdline-tools/
        echo "Checking tools/bin directory:"
        ls -la $ANDROID_HOME/tools/bin/
        echo "Testing old sdkmanager path (via symlink):"
        $ANDROID_HOME/tools/bin/sdkmanager --version || echo "Old path failed"
        echo "Testing actual sdkmanager paths:"
        if [ -f "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" ]; then
          echo "Testing latest path:"
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --version || echo "Latest path failed"
        fi
        if [ -f "$ANDROID_HOME/cmdline-tools/latest-2/bin/sdkmanager" ]; then
          echo "Testing latest-2 path:"
          $ANDROID_HOME/cmdline-tools/latest-2/bin/sdkmanager --version || echo "Latest-2 path failed"
        fi
        echo "Checking NDK:"
        ls -la $ANDROID_HOME/ndk/
    
    - name: Cache Buildozer global directory
      uses: actions/cache@v4
      with:
        path: .buildozer_global
        key: buildozer-global-${{ hashFiles('buildozer.spec') }}
    
    - name: Cache Buildozer directory
      uses: actions/cache@v4
      with:
        path: .buildozer
        key: buildozer-${{ hashFiles('buildozer.spec') }}
    
    - name: Build APK
      run: |
        # Set environment variables for better build stability
        export GRADLE_OPTS="-Xmx2048m -Dorg.gradle.jvmargs=-Xmx2048m"
        export JAVA_OPTS="-Xmx2048m"
        # Build APK
        buildozer android debug
      env:
        GRADLE_OPTS: "-Xmx2048m -Dorg.gradle.jvmargs=-Xmx2048m"
        JAVA_OPTS: "-Xmx2048m"
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: bin/*.apk